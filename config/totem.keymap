//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        space_hold {
            bindings = <&kp SPACE>;
            key-positions = <22 23>;
        };

        symbol_layer {
            bindings = <&mo 5>;
            key-positions = <12 13>;
        };

        vscode_search {
            bindings = <&vscode_search>;
            key-positions = <21 22>;
        };

        mission_control {
            bindings = <&kt LC(UP_ARROW)>;
            key-positions = <22 23 24>;
        };
    };

    macros {
        vscode_search: vscode_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "VSCODE_SEARCH";
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kt>, <&kt>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
         &hold_tap LS(Q) Q  &hold_tap LS(W) W  &hold_tap LS(E) E  &hold_tap LS(R) R       &hold_tap LS(T) T         &hold_tap LS(Y) Y  &hold_tap LS(U) U   &hold_tap LS(I) I          &hold_tap LS(O) O         &hold_tap LS(P) P
         &mt LEFT_SHIFT A   &lt 2 S            &lt 3 D            &lt 4 F                 &hold_tap LS(G) G         &hold_tap LS(H) H  &mt LEFT_COMMAND J  &mt LEFT_ALT K             &mt LEFT_CONTROL L        &mt LEFT_SHIFT SEMICOLON
&kp ESC  &hold_tap LS(Z) Z  &hold_tap LS(X) X  &hold_tap LS(C) C  &hold_tap LS(V) V       &hold_tap LS(B) B         &hold_tap LS(N) N  &hold_tap LS(M) M   &hold_tap LS(COMMA) COMMA  &hold_tap LS(DOT) PERIOD  &hold_tap LS(FSLH) SLASH  &hold_tap LS(SINGLE_QUOTE) SQT
                                               &lt 1 TAB          &mt LEFT_COMMAND SPACE  &mt LEFT_CONTROL SPACE    &kp BACKSPACE      &kp ENTER           &kp BSPC
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        media_controls {
            bindings = <
       &none  &none  &none  &none  &none    &none  &none  &kt C_NEXT        &kt C_VOLUME_UP    &none
       &none  &none  &none  &none  &none    &none  &none  &kt C_PLAY_PAUSE  &kt C_MUTE         &none
&none  &none  &none  &none  &none  &none    &none  &none  &kt C_PREVIOUS    &kt K_VOLUME_DOWN  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };

        control_arrows {
            bindings = <
       &none           &none  &none         &none             &none        &none          &none               &none               &none                &none
       &kt LEFT_SHIFT  &none  &kt LEFT_ALT  &kt LEFT_COMMAND  &none        &none          &kt LC(LEFT_ARROW)  &kt LC(UP_ARROW)    &kt LC(RIGHT_ARROW)  &none
&none  &none           &none  &none         &none             &none        &none          &none               &kt LC(DOWN_ARROW)  &none                &none  &none
                              &kt TAB       &kt SPACE         &kt SPACE    &kt BACKSPACE  &kt ENTER           &none
            >;
        };

        alt_arrows {
            bindings = <
       &none           &none             &none    &none             &none        &none          &none               &none               &none                &none
       &kt LEFT_SHIFT  &kt LEFT_CONTROL  &none    &kt LEFT_COMMAND  &none        &none          &kt LA(LEFT_ARROW)  &kt LA(UP_ARROW)    &kt LA(RIGHT_ARROW)  &none
&none  &none           &none             &none    &none             &none        &none          &none               &kt LA(DOWN_ARROW)  &none                &none  &none
                                         &kt TAB  &kt SPACE         &kt SPACE    &kt BACKSPACE  &kt ENTER           &none
            >;
        };

        command_arrows {
            bindings = <
       &none           &none             &none         &none      &none        &none          &none               &none               &none                &none
       &kt LEFT_SHIFT  &kt LEFT_CONTROL  &kt LEFT_ALT  &none      &none        &none          &kt LG(LEFT_ARROW)  &kt LG(UP_ARROW)    &kt LG(RIGHT_ARROW)  &none
&none  &none           &none             &none         &none      &none        &none          &none               &kt LG(DOWN_ARROW)  &none                &none  &none
                                         &kt TAB       &kt SPACE  &kt SPACE    &kt BACKSPACE  &kt ENTER           &none
            >;
        };

        symbol_layer {
            bindings = <
        &trans  &trans  &trans   &trans     &trans       &hold_tap LS(RIGHT_BRACKET) RIGHT_BRACKET  &hold_tap LS(NUMBER_1) NUMBER_1  &hold_tap LS(NUMBER_2) NUMBER_2  &hold_tap LS(NUMBER_3) NUMBER_3  &hold_tap LS(EQUAL) EQUAL
        &trans  &trans  &trans   &trans     &trans       &hold_tap LS(LEFT_BRACKET) LEFT_BRACKET    &hold_tap LS(NUMBER_4) NUMBER_4  &hold_tap LS(NUMBER_5) NUMBER_5  &hold_tap LS(NUMBER_6) NUMBER_6  &hold_tap LS(NUMBER_0) NUMBER_0
&trans  &trans  &trans  &trans   &trans     &trans       &hold_tap LS(BSLH) BACKSLASH               &hold_tap LS(NUMBER_7) NUMBER_7  &hold_tap LS(NUMBER_8) NUMBER_8  &hold_tap LS(NUMBER_9) NUMBER_9  &hold_tap LS(MINUS) MINUS        &hold_tap LS(GRAVE) GRAVE
                        &kt TAB  &kt SPACE  &kt SPACE    &kt BACKSPACE                              &kt ENTER                        &trans
            >;
        };
    };
};

//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        space_hold {
            bindings = <&kp SPACE>;
            key-positions = <22 23>;
        };

        symbol_layer {
            bindings = <&mo 4>;
            key-positions = <12 13>;
        };

        vscode_search {
            bindings = <&vscode_search>;
            key-positions = <21 22>;
        };

        mission_control {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <22 23 24>;
        };

        app_switcher {
            bindings = <&app_switcher_open>;
            key-positions = <27 28 29>;
        };
    };

    macros {
        vscode_search: vscode_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "VSCODE_SEARCH";
        };

        app_switcher_open: app_toggle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_COMMAND &kp TAB &tog 6>;
            label = "APP_TOGGLE";
        };

        app_switcher_select: app_switcher_select {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_COMMAND &tog 6>;
            label = "APP_SWITCHER_SELECT";
        };

        app_switcher_cancel: app_switcher_cancel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kt LEFT_COMMAND &tog 6>;
            label = "APP_SWITCHER_CANCEL";
        };

        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &as_ht Q Q        &as_ht W W  &as_ht E E  &as_ht R R              &as_ht T T                &as_ht Y Y     &as_ht U U          &as_ht I I          &as_ht O O          &as_ht P P
            &mt LEFT_SHIFT A  &lt 1 S     &lt 2 D     &lt 3 F                 &as_ht G G                &as_ht H H     &mt LEFT_COMMAND J  &mt LEFT_ALT K      &mt LEFT_CONTROL L  &mt LEFT_SHIFT SEMICOLON
&kp ESCAPE  &as_ht Z Z        &as_ht X X  &as_ht C C  &as_ht V V              &as_ht B B                &as_ht N N     &as_ht M M          &as_ht COMMA COMMA  &as_ht DOT DOT      &as_ht FSLH FSLH          &as_ht SINGLE_QUOTE SINGLE_QUOTE
                                          &lt 5 TAB   &mt LEFT_COMMAND SPACE  &mt LEFT_CONTROL SPACE    &kp BACKSPACE  &kp ENTER           &kp DELETE
            >;
        };

        control_arrows {
            bindings = <
         &none           &none  &none         &none             &none            &none          &none           &none           &none            &none
         &kp LEFT_SHIFT  &none  &kp LEFT_ALT  &kp LEFT_COMMAND  &none            &none          &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &none
&kp ESC  &none           &none  &none         &none             &none            &none          &none           &kp DOWN_ARROW  &none            &none  &none
                                &kp LC(TAB)   &kp LC(SPACE)     &kp LC(SPACE)    &kp BACKSPACE  &kp ENTER       &none
            >;
        };

        alt_arrows {
            bindings = <
         &none           &none             &none        &none             &none    &none              &none               &none               &none                &none
         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none        &kp LEFT_COMMAND  &none    &none              &kp LA(LEFT_ARROW)  &kp LA(UP_ARROW)    &kp LA(RIGHT_ARROW)  &none
&kp ESC  &none           &none             &none        &none             &none    &none              &none               &kp LA(DOWN_ARROW)  &none                &none  &none
                                           &kp LA(TAB)  &kp LA(SPACE)     &none    &kp LA(BACKSPACE)  &kp ENTER           &kp LA(DELETE)
            >;
        };

        command_arrows {
            bindings = <
         &none           &none             &none         &none          &none    &none              &none               &none               &none                &none
         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &none          &none    &none              &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)  &none
&kp ESC  &none           &none             &none         &none          &none    &none              &none               &kp LG(DOWN_ARROW)  &none                &none  &none
                                           &kp LG(TAB)   &kp LG(SPACE)  &none    &kp LG(BACKSPACE)  &kp ENTER           &kp LG(DELETE)
            >;
        };

        symbol_layer {
            bindings = <
         &trans          &trans            &trans   &trans                  &trans                    &as_ht RBKT RIGHT_BRACKET  &as_ht NUMBER_1 NUMBER_1  &as_ht NUMBER_2 NUMBER_2  &as_ht NUMBER_3 NUMBER_3  &as_ht EQUAL EQUAL
         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans   &trans                  &trans                    &as_ht LBKT LEFT_BRACKET   &as_ht NUMBER_4 NUMBER_4  &as_ht NUMBER_5 NUMBER_5  &as_ht NUMBER_6 NUMBER_6  &as_ht NUMBER_0 NUMBER_0
&kp ESC  &trans          &trans            &trans   &trans                  &trans                    &as_ht BSLH BSLH           &as_ht NUMBER_7 NUMBER_7  &as_ht NUMBER_8 NUMBER_8  &as_ht NUMBER_9 NUMBER_9  &as_ht MINUS MINUS        &as_ht GRAVE GRAVE
                                           &kp TAB  &mt LEFT_COMMAND SPACE  &mt LEFT_CONTROL SPACE    &kp BACKSPACE              &kp ENTER                 &kp DELETE
            >;
        };

        media_controls {
            bindings = <
       &none  &none  &none  &none  &none    &none  &kp C_BRIGHTNESS_INC  &kp C_NEXT        &kp C_VOLUME_UP    &none
       &none  &none  &none  &none  &none    &none  &none                 &kp C_PLAY_PAUSE  &kp C_MUTE         &none
&none  &none  &none  &none  &none  &none    &none  &kp C_BRIGHTNESS_DEC  &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &none  &none
                     &none  &none  &none    &none  &none                 &none
            >;
        };

        app_switcher_layer {
            bindings = <
                      &none  &none  &none    &none  &none    &none  &none                 &none     &none      &none
                      &none  &none  &none    &none  &none    &none  &kp LEFT              &kp DOWN  &kp RIGHT  &none
&app_switcher_cancel  &none  &none  &none    &none  &none    &none  &none                 &kp DOWN  &none      &none  &none
                                    &kp TAB  &none  &none    &none  &app_switcher_select  &none
            >;
        };
    };
};

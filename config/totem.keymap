//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        space_hold {
            bindings = <&kp SPACE>;
            key-positions = <22 23>;
        };

        symbol_layer {
            bindings = <&mo 6>;
            key-positions = <12 13>;
        };

        vscode_search {
            bindings = <&vscode_search>;
            key-positions = <21 22>;
        };

        mission_control {
            bindings = <&kt LC(UP_ARROW)>;
            key-positions = <22 23 24>;
        };
    };

    macros {
        vscode_search: vscode_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "VSCODE_SEARCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &kp Q    &kp W    &kp E      &kp R                   &kp T                     &kp Y          &kp U               &kp I           &kp O               &kp P
            &lt 2 A  &lt 3 S  &lt 4 D    &lt 5 F                 &kp G                     &kp H          &mt LEFT_COMMAND J  &mt LEFT_ALT K  &mt LEFT_CONTROL L  &mt LEFT_SHIFT SEMICOLON
&kp ESCAPE  &kp Z    &kp X    &kp C      &kp V                   &kp B                     &kp N          &kp M               &kp COMMA       &kp DOT             &kp FSLH                  &kp APOS
                              &lt 1 TAB  &mt LEFT_COMMAND SPACE  &mt LEFT_CONTROL SPACE    &kp BACKSPACE  &kp ENTER           &kp BSPC
            >;
        };

        media_controls {
            bindings = <
       &none  &none  &none  &none  &none    &none  &kp C_BRIGHTNESS_INC  &kp C_NEXT        &kp C_VOLUME_UP    &none
       &none  &none  &none  &none  &none    &none  &none                 &kp C_PLAY_PAUSE  &kp C_MUTE         &none
&none  &none  &none  &none  &none  &none    &none  &kp C_BRIGHTNESS_DEC  &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &none  &none
                     &none  &none  &none    &none  &none                 &none
            >;
        };

        shift_arrows {
            bindings = <
            &none  &none             &none         &none             &none            &none          &none               &none               &none                &none
            &none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &none            &none          &kp LS(LEFT_ARROW)  &kp LS(UP_ARROW)    &kp LS(RIGHT_ARROW)  &none
&kp ESCAPE  &none  &none             &none         &none             &none            &none          &none               &kp LS(DOWN_ARROW)  &none                &none  &none
                                     &kp TAB       &kp SPACE         &kp LC(SPACE)    &kp BACKSPACE  &kp ENTER           &none
            >;
        };

        control_arrows {
            bindings = <
            &none           &none  &none         &none             &none            &none          &none           &none           &none            &none
            &kp LEFT_SHIFT  &none  &kp LEFT_ALT  &kp LEFT_COMMAND  &none            &none          &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &none
&kp ESCAPE  &none           &none  &none         &none             &none            &none          &none           &kp DOWN_ARROW  &none            &none  &none
                                   &kp LC(TAB)   &kp LC(SPACE)     &kp LC(SPACE)    &kp BACKSPACE  &kp ENTER       &none
            >;
        };

        alt_arrows {
            bindings = <
            &none           &none             &none        &none             &none            &none              &none               &none               &none                &none
            &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none        &kp LEFT_COMMAND  &none            &none              &kp LA(LEFT_ARROW)  &kp LA(UP_ARROW)    &kp LA(RIGHT_ARROW)  &none
&kp ESCAPE  &none           &none             &none        &none             &none            &none              &none               &kp LA(DOWN_ARROW)  &none                &none  &none
                                              &kp LA(TAB)  &kp LA(SPACE)     &kp LA(SPACE)    &kp LA(BACKSPACE)  &kp LA(ENTER)       &none
            >;
        };

        command_arrows {
            bindings = <
            &none           &none             &none         &none          &none            &none              &none               &none               &none                &none
            &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &none          &none            &none              &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)  &none
&kp ESCAPE  &none           &none             &none         &none          &none            &none              &none               &kp LG(DOWN_ARROW)  &none                &none  &none
                                              &kp LG(TAB)   &kp LG(SPACE)  &kp LG(SPACE)    &kp LG(BACKSPACE)  &kp LG(ENTER)       &none
            >;
        };

        symbol_layer {
            bindings = <
        &trans  &trans  &trans   &trans     &trans       &kp RBKT       &kp N1     &kp N2  &kp N3  &kp EQUAL
        &trans  &trans  &trans   &trans     &trans       &kp LBKT       &kp N4     &kp N5  &kp N6  &kp N0
&trans  &trans  &trans  &trans   &trans     &trans       &kp BSLH       &kp N7     &kp N8  &kp N9  &kp MINUS  &kp GRAVE
                        &kp TAB  &kp SPACE  &kp SPACE    &kp BACKSPACE  &kp ENTER  &trans
            >;
        };
    };
};
